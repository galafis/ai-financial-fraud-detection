# Docker Compose para AI Financial Fraud Detection System
# Configuração básica para desenvolvimento e testes do sistema de detecção de fraudes

version: '3.8'

services:
  # API Principal - FastAPI
  api:
    build:
      context: .
      dockerfile: ./docker/Dockerfile
    container_name: fraud-detection-api
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - ENV=development
      - DEBUG=true
      - LOG_LEVEL=info
    volumes:
      # Volume opcional para desenvolvimento - permite hot reload
      - ./src:/app/src
      - ./models:/app/models  # Para persistir modelos treinados
    depends_on:
      - redis
    networks:
      - fraud-detection-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Cache e Feature Store
  redis:
    image: redis:7-alpine
    container_name: fraud-detection-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - fraud-detection-network
    command: redis-server --appendonly yes

  # Opcional: Kafka para streaming (descomentado quando necessário)
  # kafka:
  #   image: confluentinc/cp-kafka:latest
  #   container_name: fraud-detection-kafka
  #   restart: unless-stopped
  #   ports:
  #     - "9092:9092"
  #   environment:
  #     KAFKA_BROKER_ID: 1
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  #   depends_on:
  #     - zookeeper
  #   networks:
  #     - fraud-detection-network

  # zookeeper:
  #   image: confluentinc/cp-zookeeper:latest
  #   container_name: fraud-detection-zookeeper
  #   restart: unless-stopped
  #   environment:
  #     ZOOKEEPER_CLIENT_PORT: 2181
  #     ZOOKEEPER_TICK_TIME: 2000
  #   networks:
  #     - fraud-detection-network

volumes:
  redis_data:
    driver: local

networks:
  fraud-detection-network:
    driver: bridge
